name: Verify

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize

env:
  CI: true
  FORCE_COLOR: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      affected: ${{ steps.setup.outputs.affected }}
      cache-key: ${{ steps.setup.outputs.cache-key }}
      NX_BASE: ${{ env.NX_BASE }}
      NX_HEAD: ${{ env.NX_HEAD }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup
        id: setup
        uses: ./.github/actions/setup
        with:
          load-affecteds: true
          cache-cypress: true

  # verify:
  #   needs: setup
  #   runs-on: ubuntu-latest
  #   env:
  #     NX_BASE: ${{ needs.setup.outputs.NX_BASE }}
  #     NX_HEAD: ${{ needs.setup.outputs.NX_HEAD }}
  #   if: needs.setup.outputs.affected != ''
  #   strategy:
  #     matrix:
  #       task: ['format:check', lint, 'test -- --ci --code-coverage', 'build --prod', e2e]
  #   name: ${{ matrix.task }}
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - name: Setup
  #       uses: ./.github/actions/setup
  #       with:
  #         cache-key: ${{ needs.setup.outputs.cache-key }}
  #         cache-cypress: ${{ matrix.task == 'e2e' }}
  #     - run: npx nx affected --target=${{ matrix.task }} --parallel

  # deployment:
  #   needs:
  #     - setup
  #     - verify
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: preview
  #     url: ${{ steps.firebase.outputs.url }}
  #   if: contains(needs.setup.outputs.affected, 'front')
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         ref: ${{ github.event.pull_request.head.sha }}
  #     - name: Setup
  #       uses: ./.github/actions/setup
  #       with:
  #         cache-key: ${{ needs.setup.outputs.cache-key }}
  #     - run: npx nx run front:build:preview
  #     - name: Lighthouse locally
  #       uses: ./.github/actions/lhci
  #       with:
  #         token: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
  #         cmd: --collect.staticDistDir=./dist/apps/front
  #         name: front
  #     - name: Deploy front to hosting preview
  #       id: firebase
  #       uses: ./.github/actions/firebase/hosting
  #       if: success()
  #       with:
  #         project-name: front-preview
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         project-id: ${{ secrets.FIREBASE_PROJECT_ID_PREVIEW }}
  #         service-account: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_NX_MONO_PREVIEW }}
  #         lhci-token: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  deployment_api:
    needs: setup
    runs-on: ubuntu-latest
    environment:
      name: api-preview
      url: ${{ steps.firebase.outputs.url }}
    if: contains(needs.setup.outputs.affected, 'api')
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup
        uses: ./.github/actions/setup
        with:
          cache-key: ${{ needs.setup.outputs.cache-key }}
      - run: npx nx run api:build:preview
      - name: Deploy api to functions preview
        id: firebase
        uses: ./.github/actions/firebase/functions
        if: success()
        with:
          env: preview
          project-name: api-preview
          token: ${{ secrets.GITHUB_TOKEN }}
          url: ${{ secrets.FIREBASE_PROJECT_PREVIEW_API_URL }}
